# appearance
set-option -sa terminal-overrides ',xterm-256color:RGB'
set-option -g default-terminal screen-256color
set-option -g status-position bottom
set-option -g pane-border-lines double
set-option -g status-style "fg=black,bg=blue"
set-option -g pane-border-style "fg=gray"
set-option -g pane-active-border-style "fg=magenta"
# left
set-option -g status-left-length 40
set-option -g status-left "#(date +%Z)#(date +%z) UTC #(TZ=UTC date +%%Y-%%m-%%d) #(TZ=UTC date +%%H:%%M:%%S)"
# center
set-option -g status-justify centre
set-option -g window-status-current-style fg=black,bg=default
# right
set-option -g status-right-length 80
set-option -g status-right '#[fg=default] #S: #[default] #(exec tmux ls| cut -d ":" -f 1 |tr "\\n" " " )'
# options
set-option -g mode-keys vi
set-option -g repeat-time  500
set-option -g display-time 2000
set-option -g escape-time  0
set-option -g focus-events on
setw -g mouse on

# Prefix
unbind C-b
unbind l
set-option -g prefix C-Space
bind-key C-Space send-prefix

# General
unbind C-o
bind-key :   command-prompt
bind-key ?   list-keys
bind-key /   source-file ~/.tmux.conf \; display "\~/.tmux.conf reloaded!"
bind-key " " choose-tree -swZ
bind-key d   detach-client
bind-key m   display-message
bind-key M   show-messages
bind-key c   copy-mode
bind-key r   refresh-client

# Management
# Create
bind-key J   split-window -v -c "#{pane_current_path}"
bind-key L   split-window -h -c "#{pane_current_path}"
bind-key s   new-session 
bind-key t   new-window -c "#{pane_current_path}"
bind-key C-s command-prompt "rename-session '%%'"
bind-key C-t command-prompt "rename-window '%%'"
# Delete panes
bind-key x   kill-pane
bind-key C-x display-panes -b -d 0 "kill-pane -t '%%'"
# Swap/move panes
bind-key C-u swap-pane -U
bind-key C-d swap-pane -D
bind-key C-n display-panes -d 0 "swap-pane -dt '%%' \; refresh-client"
bind-key b   break-pane
# Resize panes
bind-key -r C-h resize-pane -L
bind-key -r C-j resize-pane -D
bind-key -r C-k resize-pane -U
bind-key -r C-l resize-pane -R

# Navigation
# Session
bind-key Tab  switch-client -n
bind-key BTab switch-client -p
bind-key X    if-shell '[ $(tmux list-sessions | wc -l) -ne 1 ]' \
                          "run-shell 'tmux switch-client -n \\\; kill-session -t \"#S\"'" \
                          "run-shell 'tmux kill-session -t \"#S\"'"
# Window
bind-key i previous-window
bind-key o next-window
# Pane
bind-key n display-panes -d 0
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

# Vi copypaste mode
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind P paste-buffer
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"

# undercurl support
set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

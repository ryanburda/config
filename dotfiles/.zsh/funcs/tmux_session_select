#!/bin/zsh

# NAME
#   tmux_session_select - a tmux session switcher.
#
# DESCRIPTION
#   Use fzf to select from a list of active tmux sessions and tmuxinator sessions.

tmux_sessions() {
    tmux ls 2> /dev/null | awk -F: '{print $1}' | sort -u
}

tmuxinator_sessions() {
    ls -l ~/.config/tmuxinator/ | awk 'NR > 1 {print $9}' | awk -F. '{print $1}'
}

combined_sessions() {
    active_sessions=$(tmux_sessions)

    tmuxinator_only_sessions=$(tmuxinator_sessions)

    inactive_tmuxinator_sessions=$(echo "$tmuxinator_only_sessions" | while read -r session; do
        if ! echo "$active_sessions" | grep -q "^$session$"; then
            echo "$session|  $session"
        fi
    done)

    echo "$active_sessions" | while read -r session; do
        # Here we colorize the active sessions
        RED="\033[31m"
        GREEN="\033[32m"
        YELLOW="\033[33m"
        RESET="\033[0m"

        CURRENT_SESSION=$(tmux display-message -p '#S' 2> /dev/null)
        PREVIOUS_SESSION=$(tmux display-message -p '#{client_last_session}' 2> /dev/null)
        
        INDICATOR="  "
        if [[ $session == $CURRENT_SESSION ]]; then
            INDICATOR="${RED}% ${RESET}"
        elif [[ $session == $PREVIOUS_SESSION ]]; then
            INDICATOR="${YELLOW}# ${RESET}"
        fi

        COLORED_SESSION="${INDICATOR}${GREEN}${session}${RESET}"

        echo "${session}|${COLORED_SESSION}"
    done

    echo "$inactive_tmuxinator_sessions"
}

create_new_tmux_session() {
    read -r "s?session name: "
    tmux new-session -d -s $s
    tmux switch-client -t $s
}

HEADER_LINES=(
    "tab:    previous session"
    "ctrl-s: new session"
    "ctrl-x: kill session"
)
HEADER=$(printf "%s\n" "${HEADER_LINES[@]}")

SESSION=$(combined_sessions | \
          fzf --cycle \
              --layout reverse \
              --with-nth 2 \
              --delimiter '|' \
              --ansi \
              --prompt "  > " \
              --bind "tab:execute(tmux switch-client -l)+abort" \
              --bind "ctrl-s:become($(declare -f create_new_tmux_session); create_new_tmux_session)" \
              --bind "ctrl-x:execute(tmux kill-session -t {1})+clear-query+reload($(declare -f tmux_sessions tmuxinator_sessions combined_sessions); combined_sessions)" \
              --header $HEADER)

if [[ ! -z $SESSION ]]; then
    # Use `cut` to get the uncolorized session name which is the field after the pipe
    SESSION=$(echo $SESSION | awk -F'|' '{print $1}')

    if echo $(tmux_sessions) | grep -q "$SESSION"; then
        if [[ -z $TMUX ]]; then
            tmux attach
        fi
        tmux switch-client -t $SESSION
    else
        tmuxinator start $SESSION
    fi
fi

#!/bin/zsh

# NAME
#   tmux_session_select - a tmux session switcher.
#
# DESCRIPTION
#   Use fzf to select from a list of active tmux sessions. Can also start tmuxinator sessions.

tmux_sessions() {
    tmux ls 2> /dev/null | awk -F: '{print $1}' | sort -u
}

tmuxinator_sessions() {
    ls -l ~/.config/tmuxinator/ | awk 'NR > 1 {print $9}' | awk -F. '{print $1}'
}

create_new_tmux_session() {
    read -r "s?Enter new session name: "
    tmux new-session -d -s $s
    tmux switch-client -t $s
}

# Show tmuxinator sessions if there are no active sessions.
tmux ls >/dev/null 2>&1
if [ $? -eq 0 ]; then
    SESSION_TYPE="_TMUX"
else
    SESSION_TYPE="_TMUXINATOR"
fi

while true; do

    CURRENT_SESSION_TYPE=$SESSION_TYPE

    if [[ "$SESSION_TYPE" == "_TMUX" ]]; then
        CURRENT_SESSION=$(tmux display-message -p '#S')
        PREVIOUS_SESSION=$(tmux display-message -p '#{client_last_session}')

        HEADER_LINES=(
            "---> ${CURRENT_SESSION}"
            "tab: ${PREVIOUS_SESSION}"
            "ctrl-s: new session"
            "ctrl-x: kill session"
            "ctrl-l: list tmuxinator sessions"
        )
        HEADER=$(printf "%s\n" "${HEADER_LINES[@]}")

        SESSION=$(tmux_sessions | \
                  fzf --cycle \
                      --layout reverse \
                      --bind "tab:execute(tmux switch-client -l)+abort" \
                      --bind "ctrl-s:become(echo '_TMUX_NEW')+abort" \
                      --bind "ctrl-l:become(echo '_TMUXINATOR')+abort" \
                      --bind "ctrl-x:execute(tmux kill-session -t {})+clear-query+reload($(declare -f tmux_sessions); tmux_sessions)" \
                      --header $HEADER)

        if [[ "$SESSION" == "_TMUXINATOR" ]]; then
            SESSION_TYPE="_TMUXINATOR"
            continue
        elif [[ "$SESSION" == "_TMUX_NEW" ]]; then
            create_new_tmux_session
            exit
        elif [[ ! -z $SESSION ]]; then
            if [[ -z $TMUX ]]; then
                # Attach to tmux if currently detached.
                tmux attach
            fi
            tmux switch-client -t $SESSION
            break
        fi
    elif [[ "$SESSION_TYPE" == "_TMUXINATOR" ]]; then
        HEADER_LINES=(
            "ctrl-s: new session"
            "ctrl-l: list active tmux sessions"
        )
        HEADER=$(printf "%s\n" "${HEADER_LINES[@]}")

        SESSION=$(tmuxinator_sessions | \
                  fzf --cycle \
                      --layout reverse \
                      --bind "ctrl-s:become(echo '_TMUX_NEW')+abort" \
                      --bind "ctrl-l:become(echo '_TMUX')+abort" \
                      --header $HEADER)

        if [[ "$SESSION" == "_TMUX" ]]; then
            SESSION_TYPE="_TMUX"
            continue
        elif [[ "$SESSION" == "_TMUX_NEW" ]]; then
            create_new_tmux_session
            exit
        elif [[ ! -z $SESSION ]]; then
            tmuxinator start $SESSION
            break
        fi
    fi

    # Exit the loop if the session type has not changed.
    if [[ $SESSION_TYPE = $CURRENT_SESSION_TYPE ]]; then
        break
    fi

done

#!/bin/zsh

# NAME
#   tmux_session_select - a tmux session switcher.
#
# DESCRIPTION
#   Use fzf to select from a list of active tmux sessions and tmuxinator sessions.

tmux_sessions() {
    tmux ls 2> /dev/null | awk -F: '{print $1}' | sort -u
}

tmuxinator_sessions() {
    ls -l ~/.config/tmuxinator/ | awk 'NR > 1 {print $9}' | awk -F. '{print $1}'
}

combined_sessions() {
    # Get active tmux sessions
    local active_sessions=$(tmux_sessions)

    # Get tmuxinator sessions
    local tmuxinator_only_sessions=$(tmuxinator_sessions)

    # Remove active sessions from tmuxinator sessions
    local inactive_tmuxinator_sessions=$(echo "$tmuxinator_only_sessions" | while read -r session; do
        if ! echo "$active_sessions" | grep -q "^$session$"; then
            echo $session
        fi
    done)

    # Combine the lists with active sessions first
    echo "$active_sessions"
    echo "$inactive_tmuxinator_sessions"
}

create_new_tmux_session() {
    read -r "s?Enter new session name: "
    tmux new-session -d -s $s
    tmux switch-client -t $s
}

CURRENT_SESSION=$(tmux display-message -p '#S')
PREVIOUS_SESSION=$(tmux display-message -p '#{client_last_session}')

HEADER_LINES=(
    "---> ${CURRENT_SESSION}"
    "tab: ${PREVIOUS_SESSION}"
    "ctrl-s: new session"
    "ctrl-x: kill session"
)
HEADER=$(printf "%s\n" "${HEADER_LINES[@]}")

SESSION=$(combined_sessions | \
          fzf --cycle \
              --layout reverse \
              --bind "tab:execute(tmux switch-client -l)+abort" \
              --bind "ctrl-s:become($(declare -f create_new_tmux_session); create_new_tmux_session)" \
              --bind "ctrl-x:execute(tmux kill-session -t {})+clear-query+reload($(declare -f combined_sessions); combined_sessions)" \
              --header $HEADER)

if [[ ! -z $SESSION ]]; then
    if echo $(tmux_sessions) | grep -q "$SESSION"; then
        if [[ -z $TMUX ]]; then
            tmux attach
        fi
        tmux switch-client -t $SESSION
    else
        tmuxinator start $SESSION
    fi
fi

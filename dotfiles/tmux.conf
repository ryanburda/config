set-option -s exit-unattached off

# appearance
set-option -g default-terminal "xterm-256color"
set-option -as terminal-features ",*:RGB"
set-option -ag terminal-overrides ",xterm-256color:RGB"
set-option -g default-terminal screen-256color
set-option -g status-position bottom
set-option -g pane-border-lines heavy
set-option -g status-style "fg=default,bg=default"
set-option -g pane-border-style "fg=gray"
set-option -g pane-active-border-style "fg=blue"
set-option -g popup-border-lines heavy
set-option -g pane-border-indicators both
set-option -g mode-keys vi
set-option -g repeat-time 500
set-option -g display-time 2000
set-option -g escape-time 0
set-option -g focus-events on
setw -g mouse on

# Set up a hook to refresh the status bar when things change. (Closed session, window, ect)
set-hook -g client-session-changed 'refresh-client -S'

unbind C-b
unbind l
# NOTE: make sure `System Prferences -> Keyboard Shortcuts -> Input Sources` does not have any shortcuts that use C-Space
set-option -g prefix C-Space
bind-key C-Space send-prefix

unbind C-o
bind-key : command-prompt
bind-key ? list-keys
bind-key . source-file "${XDG_CONFIG_HOME}/tmux/tmux.conf" \; display "tmux conf reloaded!"
# sessions
bind-key D detach-client
bind-key C-s new-session
# windows
bind-key t new-window -c "#{pane_current_path}"
bind-key j split-window -l 12 -c "#{pane_current_path}"
bind-key l split-window -l 90 -h -c "#{pane_current_path}"
bind-key x kill-pane

set-option -g detach-on-destroy off
bind-key X run-shell "tmuxinator stop #S 2> /dev/null || tmux kill-session -t #S"

bind-key i previous-window
bind-key o next-window
bind-key B break-pane
bind-key p popup -h 80% -w 80%
bind-key f send-keys 'C-t'
bind-key s popup -h 18 -w 40 -y 0 -E "~/.zsh/funcs/tmux_session_select"
bind-key d popup -h 80% -w 80% -E "lazydocker"
bind-key g popup -h 80% -w 80% -E "lazygit"
bind-key c popup -h 34 -w 34 -y 0 -E "~/.zsh/funcs/colorscheme_picker"
bind-key v popup -h 18 -w 45 -y 0 -E "~/.zsh/funcs/font_picker"
bind-key b popup -h 16 -w 30 -y 0 -E "~/.zsh/funcs/background_picker"
bind-key m popup -h 29 -w 68 "cal -A 4 -B 4"
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/mrjones2014/smart-splits.nvim
# NOTE: when is_vim, send-keys must match up with corresponding keymap in vim. (ie C-h maps to `require('smart-splits').move_cursor_left`)
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
bind-key -r 'C-h' if-shell "$is_vim" 'send-keys " Rh"' 'resize-pane -L'
bind-key -r 'C-j' if-shell "$is_vim" 'send-keys " Rj"' 'resize-pane -D'
bind-key -r 'C-k' if-shell "$is_vim" 'send-keys " Rk"' 'resize-pane -U'
bind-key -r 'C-l' if-shell "$is_vim" 'send-keys " Rl"' 'resize-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

# Vi copypaste mode
bind-key -T prefix k copy-mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key P paste-buffer
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"

# undercurl support
set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colors

# Run `prefix I` to install new plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'niksingh710/minimal-tmux-status'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

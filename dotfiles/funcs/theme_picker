#!/bin/zsh
#
# NAME
#   theme_picker - synchonizes alacritty and neovim themes.
#
# SYNOPSIS
#   theme_picker
#
# DESCRIPTION
#   Use fzf to select a theme. A theme is applied to both the terminal and neovim.
#   This script utilizes a hard coded associative list (dictionary) where the keys
#   are unique theme names that will show up in fzf and the values are strings each
#   containing:
#       * the alacritty theme
#       * the neovim colorscheme
#       * and neovim background
#   in that order separated by spaces.

typeset -A themes=(
    ['Kanagawa-wave   (Default)']="Kanagawa kanagawa-wave dark"
    ['Kanagawa-dragon']="Base16-Default-Dark kanagawa-dragon dark"
    ['Catppuccin-macchiato']="Catppuccin catppuccin-macchiato dark"
    ['Catppuccin-mocha']="Catppuccin catppuccin-mocha dark"
    ['Gruvbox-dark']="Gruvbox-Dark gruvbox dark"
    ['Gruvbox-light']="Gruvbox-Light gruvbox light"
    ['Rose-pine-light']="Mocha.light rose-pine light"
    ['Rose-pine-dark']="Kanagawa rose-pine dark"
    ['Carbonfox']="default.dark carbonfox dark"
    ['Nightfox']="Iceberg-Dark nightfox dark"
    ['Dayfox']="Mocha.light dayfox light"
    ['Dawnfox']="Mocha.light dawnfox light"
    ['Tender']="tender tender dark"
)

theme_key=$(printf "%s\n" "${(k)themes[@]}" | sort | fzf)
theme=${themes[$theme_key]}

if [[ ! -z $theme ]]; then
    a=$(print $theme | awk -F ' ' '{print $1}')
    b=$(print $theme | awk -F ' ' '{print $2}')
    c=$(print $theme | awk -F ' ' '{print $3}')

    alacritty-themes $a

    echo "$b" > $XDG_CONFIG_HOME/nvim/.colorscheme
    echo "$c" > $XDG_CONFIG_HOME/nvim/.background
fi

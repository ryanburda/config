#!/bin/zsh
#
# NAME
#   background_picker
#
# SYNOPSIS
#   Terminal background image picker.
#
# DESCRIPTION
#   Use fzf to select a background image.
#   The selected image is written to a file.
#   The wezterm.lua file is then reloaded to
#   trigger the code that performs the image change.
#   The neovim colorsheme file is touched in order
#   to force an update of the neovim colorscheme
#   to either apply or remove transparency.

function set_image(){
    # Accepts a single parameter that is a valid key into the images dictionary above.
    selection=$1

    BACKGROUND_FILE_PATH=$XDG_CONFIG_HOME/wezterm/.background

    if [[ $selection = 'NONE' ]]; then
        # Delete the file if 'None' was selected.
        # Wezterm will not display an image if the file does not exist.
        rm -f $BACKGROUND_FILE_PATH
        # Touch the .colorscheme file. This file is being watched for changes.
        # When a change is detected the neovim colorscheme is changed to the contents of the file.
        # Changing the colorscheme then fires the ColorScheme autocmd in `transparency.lua`.
        #
        # This will remove transparency from the colorscheme setting it back to normal.
        touch $XDG_CONFIG_HOME/nvim/.colorscheme
        return 1
    fi

    if [[ ! -z $selection ]]; then
        # Persist the selection to a file.
        echo $selection > $BACKGROUND_FILE_PATH
        # Touch the wezterm config to reload wezterm
        touch $XDG_CONFIG_HOME/wezterm/wezterm.lua
        # Touch the .colorscheme file. This file is being watched for changes.
        # When a change is detected the neovim colorscheme is changed to the contents of the file.
        # Changing the colorscheme then fires the ColorScheme autocmd in `transparency.lua`.
        #
        # This will make certain highlight groups transparent allowing the background image to show up.
        touch $XDG_CONFIG_HOME/nvim/.colorscheme
    fi
}

images=$(\ls ${XDG_CONFIG_HOME}/wezterm/backgrounds)
images+=("\nNONE")
selection=$(print $images | fzf --cycle)

if [[ -n "${selection}" ]]; then
    set_image $selection
fi

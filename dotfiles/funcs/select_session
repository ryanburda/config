#!/bin/zsh
#
# NAME
#   select_session - a simple way to start tmuxinator sessions.
#
# SYNOPSIS
#   select_session [session_name]
#
# DESCRIPTION
#   Starts a tmuxinator session if given a session name.
#   Opens up fzy if an argument is not provided.
#
#   A special session name called `CREATE_NEW_SESSION` exists.
#   When `CREATE_NEW_SESSION` is passed as an argument or selected
#   in fzy an additional fzy interactive prompt will show up in
#   order to set the current working directory for the new session.

NEW_SESSION_NAME="CREATE_NEW_SESSION"

# Get the session name if it wasn't passed in as a parameter.
if [[ -n $1 ]]; then
    SESSION=$1
fi

# current sessions
CURRENT_SESSIONS=("${(@f)$(tmux list-sessions | awk -F ':' '{print $1}')}")
# tmuxinator sessions
TMUXINATOR_SESSIONS=("${(@f)$(\ls ~/.config/tmuxinator/ | awk -F '.' '{print $1}')}")
# sort the sessions before passing to fzy
SESSIONS=("${(@f)$(echo $TMUXINATOR_SESSIONS $CURRENT_SESSIONS | xargs -n1 | sort -u)}")
# add the reserved session name to the top of the list
ALL_SESSIONS=("${NEW_SESSION_NAME}" "${SESSIONS[@]}")

# Use fzy to select a tmuxinator session
SESSION=$(echo $ALL_SESSIONS | tr " " "\n" | fzy -l 20)
if [[ -z "${SESSION}" ]]; then
    return -1
fi

# Start the session.
if [[ $SESSION = $NEW_SESSION_NAME ]]; then
    # Use fzy to get a directory path.
    DIRS=$(find ~/Developer -type d -not -path '*/\.*' -maxdepth 5 -print 2> /dev/null)
    DIRS+="\n${HOME}/"
    DIR=$(print $DIRS | sort -n | fzy -l 20)
    if [[ ! -z "${DIR}" ]]; then
        tmux new-session -d -c $DIR
        tmux switch-client
    else
        return -1
    fi
elif [[ ${CURRENT_SESSIONS[(ie)$SESSION]} -le ${#CURRENT_SESSIONS} ]]; then
    tmux attach-session -t "${SESSION}"
else
    tmuxinator start $SESSION
fi
